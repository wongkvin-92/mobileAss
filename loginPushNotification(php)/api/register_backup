import { Permissions, Notifications, MailComposer } from 'expo';
import * as firebase from 'firebase';

const PUSH_ENDPOINT = 'https://exp.host/--/api/v2/push/send';
/*
firebase.initializeApp({
    apiKey: "AIzaSyD_gVvQeO8lrsyRFDlRTeBTxEqrbESnzRk",
    authDomain: "fir-video-f6862.firebaseapp.com",
    databaseURL: "https://fir-video-f6862.firebaseio.com",
    projectId: "fir-video-f6862",
    storageBucket: "fir-video-f6862.appspot.com",
    messagingSenderId: "67663017561"
});*/

export default (async function registerForPushNotificationsAsync() {
  // Android remote notification permissions are granted during the app
  // install, so this will only ask on iOS
  let { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);

  // Stop here if the user did not grant permissions
  if (status !== 'granted') {
    return;
  }
  // Get the token that uniquely identifies this device
  let token = await Notifications.getExpoPushTokenAsync();
/*
  userID = firebase.auth().currentUser.uid;

  firebase.database().ref('/users/' + userID).push({ token: token });
*/

fetch('http://10.125.197.200/ReactNative/signUp.php', {
  method: 'POST',
  body: formData,
  headers: {
    'Accept': 'application/json',
    'Content-Type': 'multipart/form-data',
  },

  }).then((response) => response.json())
      .then((responseJson) => {

        // Showing response message coming from server after inserting records.
        Alert.alert(responseJson);

        this.props.navigation.navigate('Login');

      }).catch((error) => {
        console.error(error);
      });

}
   // POST the token to our backend so we can use it to send pushes from there
 /*  return fetch(PUSH_ENDPOINT, {
     method: 'POST',
     headers: {
       Accept: 'application/json',
       'Content-Type': 'application/json',
     },
     body: JSON.stringify({
       token: {
         value: token,
       },
     }),
   });
   */
  return fetch(PUSH_ENDPOINT, {
     method: 'POST',
     headers: {
       Accept: 'application/json',
       'Content-Type': 'application/json',
     },
     body: JSON.stringify({
		  "to": token,
		  "sound": "default",
		  "body": "Hello world!",
		  //"data": "{['DDD']}",
		  "title": "Just for fun"
		}),
   });
});
